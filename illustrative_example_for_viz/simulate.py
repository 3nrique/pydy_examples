#THis script produces the numerical integration for the EoMs 
#generated by three_link_pendulum.py

from three_link_pendulum import *
from scipy.integrate import odeint
from code_gen import *
from numpy import radians

params = []
param_vals = []
for lengths in l:
    params.append(lengths)
    param_vals.append(10)
    
for masses in m:
    params.append(masses)
    param_vals.append(5)
    
for masses in M:    
    params.append(masses)
    param_vals.append(10)

for inertias in Ixx:
    params.append(inertias)
    param_vals.append(5)    

for inertias in Iyy:
    params.append(inertias) 
    param_vals.append(5)       
    
for inertias in Izz:
    params.append(inertias)            
    param_vals.append(5)
    
params.append(g)
param_vals.append(9.8)


print params
print param_vals
right_hand_side = numeric_right_hand_side(kane, params)

t = [i*0.1 for i in range(0,10)]    #Taking 10 time intervals of 0.1 sec

x0 = [radians(10), radians(10), radians(10), radians(10), radians(10), \
                    radians(10), 0, 0, 0, 0, 0, 0]

numerical_vals = odeint(right_hand_side, x0, t, args=(param_vals,))
#saving numerical vals as a dict:

values_list = []

for val in numerical_vals:
    val_dict = {}
    val_dict[alpha[0]] = val[0]
    val_dict[alpha[1]] = val[1]
    val_dict[alpha[2]] = val[2]
    val_dict[beta[0]] = val[3]
    val_dict[beta[1]] = val[4]
    val_dict[beta[2]] = val[5]
    
    #lengths are also required in dict
    
    val_dict[l[0]] = 10
    val_dict[l[1]] = 10
    val_dict[l[2]] = 10
    values_list.append(val_dict)

print values_list
